name: Uptycs Vulnerability Scanner
description: Scans containers for known vulnerabilities
author: Uptycs
inputs:
  #############################################################################
  # Required Inputs
  #############################################################################
  uptycs-secret:
    description: Tenant-specific secret for authenticating to uptycs
    required: true
  osquery-flags:
    description: Flags file to be used by osquery
    required: true
  image-id:
    description: ID of the docker image to scan for vulnerabilities
    required: true
  #############################################################################
  # Optional inputs
  #############################################################################
  fatal-cvss-score:
    description: The CVSS score at which a detected vulnerability should fail the build
    required: false
    default: '8'
runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |
        # mkdir -p .secret
        # printf "%s" "$UPTYCS_SECRET" > .secret/uptycs.secret
        # printf "%s" "$OSQUERY_FLAGS" > .secret/osquery.flags
        env | grep 'GITHUB' > .github_env
        
        docker build --progress=plain --no-cache --file uptycs-ci/Dockerfile --tag uptycs/docker-image-scanner:${{ github.sha }}.local uptycs-ci
        docker run --rm --privileged \
          --pid host \
          --net host \
          --restart no \
          --env-file .github_env \
          --volume /var/run/docker.sock:/var/run/docker.sock:ro \
          --volume /var/run/docker.pid:/var/run/docker.pid:ro \
          --volume "$GITHUB_STEP_SUMMARY:$GITHUB_STEP_SUMMARY" \
          --env FATAL_CVSS_SCORE=${{ inputs.fatal-cvss-score }} \
          --env "GITHUB_STEP_SUMMARY=$GITHUB_STEP_SUMMARY" \
          uptycs/docker-image-scanner:${{ github.sha }}.local \
          /usr/local/bin/docker-image-scan \
          --image-id ${{ inputs.image-id }} \
          --osquery-flags ${{ inputs.osquery-flags }} \
          --uptycs-secret ${{ inputs.uptycs-secret }} \
          --ci-runner-type github
      # env:
      #   UPTYCS_SECRET: ${{ inputs.uptycs-secret }}
      #   OSQUERY_FLAGS: ${{ inputs.osquery-flags }}
    # - shell: bash
    #   run: rm -rf .secret/ || true
